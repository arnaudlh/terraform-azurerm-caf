#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#

name: test-mock-standalone

on:
  workflow_dispatch:
    inputs:
      scenario:
        description: "Select the scenario you want to run:"
        required: false
        type: choice
        default: "standalone-scenarios.json"
        options:
          - standalone-scenarios-azuread.json
          - standalone-scenarios.json
          - standalone-compute.json
          - standalone-networking.json
          - standalone-scenarios-longrunners.json

env:
  TF_CLI_ARGS: "-no-color"
  TF_CLI_ARGS_destroy: "-auto-approve -refresh=false"
  ROVER_RUNNER: true
  DEFAULT_SCENARIO: "standalone-scenarios.json"

jobs:
  load_scenarios:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.load_scenarios.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: load_scenarios
        run: |
          cases=$((
            cat ./.github/workflows/${{ github.event.inputs.scenario }}||env.DEFAULT_SCENARIO) | jq -c .)
          echo "matrix=${cases}" >> $GITHUB_OUTPUT

  testcases:
    name: test
    runs-on: ubuntu-latest
    needs: load_scenarios

    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.load_scenarios.outputs.matrix)}}

    container:
      image: aztfmod/rover:1.7.5-2403.1406

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create environment variables
        run: |
          cd ${GITHUB_WORKSPACE}/examples/${{ matrix.config_files }}
          FILE_NAME=$(echo ${{ matrix.config_files }} | sed 's./..g' | xargs)
          echo STATE_FILE=${TF_DATA_DIR}/tfstates/${FILE_NAME}.tfstate  >> $GITHUB_ENV
          echo PLAN_FILE=${TF_DATA_DIR}/tfstates/${FILE_NAME}.plan >> $GITHUB_ENV
          echo CURRENT_FOLDER=${GITHUB_WORKSPACE}/examples/${{ matrix.config_files }} >> $GITHUB_ENV
          echo PARAMETER_FILES=$(find ${GITHUB_WORKSPACE}/examples/${{ matrix.config_files }} | grep .tfvars | sed 's/.*/-var-file=&/' | xargs) >> $GITHUB_ENV

      - name: Terraform Init example
        id: tf_init
        run: |
          terraform -chdir=${GITHUB_WORKSPACE}/examples \
          init \
          -upgrade=true | grep -P '^- (?=Downloading|Using|Finding|Installing)|^[^-]'

      - name: Terraform Test example
        id: tf_test
        run: |
          terraform -chdir=${GITHUB_WORKSPACE}/examples \
          test \
          -test-directory=./tests/mock \
          ${{ env.PARAMETER_FILES }} \
          -verbose

